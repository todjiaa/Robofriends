{"version":3,"sources":["Components/Card/Card.js","Components/Cardlist/Cardlist.js","Components/Title/Title.js","Components/SearchBox/SearchBox.js","Components/Loading/Loading.js","Components/Scroll/Scroll.js","Components/Header/Header.js","Components/Space/Space.js","Components/PopUpContent/PopUpContent.js","Components/PopUp/PopUp.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","id","popUpShow","className","onClick","src","alt","Cardlist","cardArray","robots","map","robot","email","Title","SearchBox","type","placeholder","onChange","searchChange","Loading","position","Scroll","children","Header","Space","style","width","height","PopUpContent","username","companyName","PopUp","console","log","current","display","popUpHide","App","state","searchFieald","popUpDisplay","popUpContent","popUpCurrent","onSearchChange","bind","onRobotClick","onPopUpClick","fetch","then","response","json","users","setState","event","this","target","value","forEach","parseInt","currentTarget","filteredRobots","filter","toLowerCase","includes","length","content","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab17d8cc.chunk.js","sourcesContent":["import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n    const { name, id, popUpShow } = props;\r\n    return(\r\n        <div className=\"card\" onClick={popUpShow} id={id}>\r\n            <div className=\"card__image-container\">\r\n            <img src={`https://robohash.org/${id}`} alt=\"robots\" />\r\n            </div>\r\n            <div className=\"card__text\">\r\n                <h2>{name}</h2>\r\n                {/* <p>{email}</p> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import Card from \"../Card/Card\";\r\nimport \"./Cardlist.css\";\r\n\r\n\r\nconst Cardlist = (props) => {\r\n    const cardArray = props.robots.map(robot => {\r\n        return(\r\n            <Card \r\n                key={robot.id} \r\n                id={robot.id} \r\n                name={robot.name} \r\n                email={robot.email}\r\n                popUpShow={props.popUpShow}\r\n            />\r\n        ); \r\n    })\r\n\r\n    return(\r\n        <div className=\"cardlist\">\r\n            {cardArray}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cardlist;","import \"./Title.css\";\r\n\r\nconst Title = () => {\r\n    return(\r\n        <div className=\"title\">\r\n            <h1>Robofriends</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Title;","import \"./SearchBox.css\";\r\n\r\nconst SearchBox = (props) => {\r\n    return(\r\n        <div className=\"search-container\">\r\n            <input \r\n                className=\"search-container__placeholder\"   \r\n                type=\"search\" \r\n                placeholder=\"Search robots...\" \r\n                onChange={props.searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import \"./Loading.css\";\r\n\r\nconst Loading = (props) => {\r\n    return(\r\n        <div className={props.position}>\r\n            <h2 className=\"text\">Robots are loading</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loading;","import \"./Scroll.css\";\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div className=\"scroll\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import \"./Header.css\";\r\n\r\nconst Header = (props) => {\r\n    return(\r\n        <div className=\"header\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","const Space = (props) => {\r\n    return <div style={{width:\"100%\", height:`${props.height}`}}></div>\r\n}\r\n\r\nexport default Space;","import \"./PopUpContent.css\";\r\n\r\nconst PopUpContent = (props) => {\r\n    const { name, email, id, username, companyName } = props;\r\n    return(\r\n        <div className=\"content\" id={id}>\r\n            <div className=\"content__image-container\">\r\n            <img src={`https://robohash.org/${id}`} alt=\"robots\" />\r\n            </div>\r\n            <div className=\"content__text\">\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n                <p>{username}</p>\r\n                <p>{companyName}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PopUpContent;","import \"./PopUp.css\";\r\nimport PopUpContent from \"../PopUpContent/PopUpContent\";\r\n\r\nconst PopUp = (props) => {\r\n    // const content = props.content.map(el => {\r\n    //     return(\r\n    //         <PopUpContent \r\n    //             key={el.id} \r\n    //             id={el.id} \r\n    //             name={el.name} \r\n    //             email={\"Email: \" + el.email}\r\n    //             username={\"Username: \" + el.username}\r\n    //             companyName={\"Company name: \" + el.company.name}\r\n    //         />\r\n    //     );\r\n    // })\r\n\r\n    // const { el } = props.current;\r\n    console.log(props.current)\r\n\r\n    return(\r\n        <div className=\"popUp\" style={{display: `${props.display}`}} onClick={props.popUpHide} >\r\n            {/* <div className=\"popUp__content-wrapper\" > */}\r\n                {/* {content} */}\r\n\r\n\r\n            <PopUpContent \r\n                key={props.current.id} \r\n                id={props.current.id} \r\n                name={props.current.name} \r\n                email={\"Email: \" + props.current.email}\r\n                username={\"Username: \" + props.current.username}\r\n                // companyName={\"Company name: \" + props.current.company.name}\r\n            />\r\n\r\n\r\n            {/* </div> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PopUp;","import React, { Component } from \"react\"\r\nimport './App.css';\r\nimport Cardlist from \"../Cardlist/Cardlist\";\r\nimport Title from \"../Title/Title\";\r\nimport SearchBox from \"../SearchBox/SearchBox\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport Scroll from \"../Scroll/Scroll\";\r\nimport Header from \"../Header/Header\";\r\nimport Space from \"../Space/Space\";\r\nimport PopUp from \"../PopUp/PopUp\";\r\n\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchFieald: \"\",\r\n      popUpDisplay: \"none\",\r\n      popUpContent: [],\r\n      popUpCurrent: \"\"\r\n    };\r\n\r\n    this.onSearchChange = this.onSearchChange.bind(this);\r\n    this.onRobotClick = this.onRobotClick.bind(this);\r\n    this.onPopUpClick = this.onPopUpClick.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n    .then(response => {\r\n      return response.json();\r\n    })\r\n    .then(users => {\r\n      this.setState({robots: users})\r\n    })\r\n  }\r\n\r\n  onSearchChange(event) {\r\n    this.setState({searchFieald: event.target.value});\r\n  }\r\n\r\n  onRobotClick(event) {\r\n    this.setState({popUpDisplay: \"block\"});\r\n\r\n    // this.setState({popUpContent: this.state.robots})\r\n\r\n    this.state.robots.forEach(robot => {\r\n      if (robot.id === parseInt(event.currentTarget.id)) {\r\n        this.setState({popUpCurrent: robot})\r\n      }\r\n    })\r\n  }\r\n\r\n  onPopUpClick(event) {\r\n    if (event.target === event.currentTarget) {\r\n      this.setState({popUpDisplay: \"none\"});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { robots, searchFieald, popUpDisplay, popUpContent, popUpCurrent } = this.state;\r\n\r\n    const filteredRobots = robots.filter(robot => {\r\n      return robot.name.toLowerCase().includes(searchFieald.toLowerCase());\r\n    })\r\n\r\n    if (robots.length === 0) {\r\n      return(\r\n        <div className=\"home\">\r\n          <Header>\r\n            <Title />\r\n            <SearchBox searchChange={this.onSearchChange}/>\r\n          </Header>\r\n          <Space height=\"210px\" />\r\n          <Scroll>\r\n            <Loading position=\"center\" />\r\n          </Scroll>\r\n        </div>\r\n      ); \r\n    }\r\n    else {\r\n      return(\r\n        <div className=\"home\">\r\n          <Header>\r\n            <Title />\r\n            <SearchBox searchChange={this.onSearchChange}/>\r\n          </Header>\r\n          <Space height=\"210px\" />\r\n          <Scroll>\r\n            <Cardlist robots={filteredRobots} popUpShow={this.onRobotClick} />\r\n          </Scroll>\r\n          <PopUp \r\n            display={popUpDisplay} \r\n            content={popUpContent} \r\n            current={popUpCurrent}\r\n            popUpHide={this.onPopUpClick} \r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}