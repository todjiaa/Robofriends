{"version":3,"sources":["Components/Card/Card.js","Components/Cardlist/Cardlist.js","Components/Title/Title.js","Components/SearchBox/SearchBox.js","Components/Loading/Loading.js","Components/Scroll/Scroll.js","Components/Header/Header.js","Components/Space/Space.js","Components/Slide/Slide.js","Components/Slider/Slider.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","id","popUpShow","robot","className","onClick","src","alt","Cardlist","cardArray","users","map","user","index","email","length","Title","SearchBox","type","placeholder","value","searchFieald","onChange","searchChange","Loading","position","Scroll","children","Header","Space","style","width","height","Slide","username","phone","website","companyName","city","activeIndex","Slider","content","el","parseInt","console","log","company","address","display","popUpHide","App","state","sliderDisplay","sliderContent","windowWidth","window","innerWidth","onSearchChange","bind","onRobotClick","onSliderClick","handleResize","e","this","setState","fetch","then","response","json","fetchUsers","addEventListener","event","target","currentTarget","filteredUsers","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61def0d2.chunk.js","sourcesContent":["import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n    const { name, id, popUpShow, robot } = props;\r\n    return(\r\n        <div className=\"card\" onClick={popUpShow} id={id}>\r\n            <div className=\"card__image-container\">\r\n            <img src={robot} alt=\"robots\" />\r\n            </div>\r\n            <div className=\"card__text\">\r\n                <h2>{name}</h2>\r\n                {/* <p>{email}</p> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import Card from \"../Card/Card\";\r\nimport \"./Cardlist.css\";\r\n\r\n\r\nconst Cardlist = (props) => {\r\n    const cardArray = props.users.map((user, index) => {\r\n        return(\r\n            <Card \r\n                key={user.id} \r\n                id={user.id} \r\n                name={user.name} \r\n                email={user.email}\r\n                popUpShow={props.popUpShow}\r\n                robot={`https://robohash.org/${user.id}`}\r\n            />\r\n        ); \r\n    })\r\n\r\n    return(\r\n        <div \r\n            className={props.users.length <= 2 ? \"cardlist cardlist--center\" : \"cardlist\"}\r\n        >\r\n            {cardArray}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cardlist;","import \"./Title.css\";\r\n\r\nconst Title = () => {\r\n    return(\r\n        <div className=\"title\">\r\n            <h1>Robofriends</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Title;","import \"./SearchBox.css\";\r\n\r\nconst SearchBox = (props) => {\r\n    return(\r\n        <div className=\"search-container\">\r\n            <input \r\n                className=\"search-container__placeholder\"   \r\n                type=\"search\" \r\n                placeholder=\"Search robots...\" \r\n                value={props.searchFieald}\r\n                onChange={props.searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import \"./Loading.css\";\r\n\r\nconst Loading = (props) => {\r\n    return(\r\n        <div className={props.position}>\r\n            <h2 className=\"text\">Robots are loading</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loading;","import \"./Scroll.css\";\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div className=\"scroll\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import \"./Header.css\";\r\n\r\nconst Header = (props) => {\r\n    return(\r\n        <div className=\"header\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","const Space = (props) => {\r\n    return <div style={{width:\"100%\", height:`${props.height}`}}></div>\r\n}\r\n\r\nexport default Space;","import \"./Slide.css\";\r\n\r\nconst Slide = (props) => {\r\n    const { name, email, id, username, phone, website, companyName, city, activeIndex } = props;\r\n    return(\r\n        <div className=\"slide\" id={id}>\r\n            <div className=\"slide__image-container\">\r\n            <img src={`https://robohash.org/${activeIndex}`} alt=\"robots\" />\r\n            </div>\r\n            <div className=\"slide__text\">\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n                <p>{username}</p>\r\n                <p>{phone}</p>\r\n                <p>{website}</p>\r\n                <p>{city}</p>\r\n                <p>{companyName}</p>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Slide;","import \"./Slider.css\";\r\nimport Slide from \"../Slide/Slide\";\r\n\r\nconst Slider = (props) => {\r\n    const content = props.content.map(el => {\r\n        if (el.id === parseInt(props.activeIndex)) {\r\n            \r\n            console.log(el.id, parseInt(props.activeIndex))\r\n            return(\r\n                <Slide \r\n                key={el.id} \r\n                id={el.id} \r\n                name={el.name} \r\n                email={\"Email: \" + el.email}\r\n                username={\"Username: \" + el.username}\r\n                companyName={\"Company name: \" + el.company.name}\r\n                city={\"City: \"+ el.address.city}\r\n                activeIndex={props.activeIndex}\r\n                />\r\n            );\r\n        }\r\n    })\r\n\r\n    return(\r\n        <div className=\"slider\" style={{display: `${props.display}`}} onClick={props.popUpHide} >\r\n            {content}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Slider;\r\n\r\n\r\n\r\n","import React, { Component } from \"react\"\r\nimport './App.css';\r\nimport Cardlist from \"../Cardlist/Cardlist\";\r\nimport Title from \"../Title/Title\";\r\nimport SearchBox from \"../SearchBox/SearchBox\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport Scroll from \"../Scroll/Scroll\";\r\nimport Header from \"../Header/Header\";\r\nimport Space from \"../Space/Space\";\r\nimport Slider from \"../Slider/Slider\";\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      users: [],\r\n      searchFieald: \"\",\r\n      sliderDisplay: \"none\",\r\n      sliderContent: [],\r\n      activeIndex: 0,\r\n      windowWidth: window.innerWidth\r\n    };\r\n\r\n    this.onSearchChange = this.onSearchChange.bind(this);\r\n    this.onRobotClick = this.onRobotClick.bind(this);\r\n    this.onSliderClick = this.onSliderClick.bind(this);\r\n    this.handleResize = this.handleResize.bind(this);\r\n  }\r\n\r\n  handleResize(e) {\r\n    this.setState({ windowWidth: window.innerWidth });\r\n    console.log(this.state.windowWidth)\r\n  };\r\n\r\n  fetchUsers() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n    .then(response => {\r\n      return response.json();\r\n    })\r\n    .then(users => {\r\n      this.setState({users: users})\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Call the users\r\n    this.fetchUsers();\r\n\r\n    // Listen to screen size changes\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n  }\r\n\r\n  onSearchChange(event) {\r\n    this.setState({searchFieald: event.target.value});\r\n  }\r\n\r\n  onRobotClick(event) {\r\n    this.setState({sliderDisplay: \"block\"});\r\n    \r\n    this.setState({activeIndex: event.currentTarget.id});\r\n\r\n    // this.setState({sliderContent: this.state.users[event.currentTarget.id-1]})\r\n\r\n    this.setState({sliderContent: this.state.users})\r\n\r\n    this.setState({searchFieald: \"\"});\r\n\r\n  }\r\n\r\n  \r\n\r\n  onSliderClick(event) {\r\n    if (event.target === event.currentTarget) {\r\n      this.setState({sliderDisplay: \"none\"});\r\n\r\n      this.setState({sliderContent: []});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { users, searchFieald, sliderDisplay, sliderContent, activeIndex } = this.state;\r\n\r\n    const filteredUsers = users.filter(user => {\r\n      return user.name.toLowerCase().includes(searchFieald.toLowerCase());\r\n    })\r\n\r\n    if (users.length === 0) {\r\n      return(\r\n        <div className=\"home\">\r\n          <Header>\r\n            <Title />\r\n            <SearchBox searchChange={this.onSearchChange} />\r\n          </Header>\r\n          <Space height=\"210px\" />\r\n          <Scroll>\r\n            <Loading position=\"center\" />\r\n          </Scroll>\r\n        </div>\r\n      ); \r\n    }\r\n    else {\r\n      return(\r\n        <div className=\"home\">\r\n          <Header>\r\n            <Title />\r\n            <SearchBox searchChange={this.onSearchChange} searchFieald={searchFieald} />\r\n          </Header>\r\n          <Space height=\"210px\" />\r\n          <Scroll>\r\n            <Cardlist users={filteredUsers} popUpShow={this.onRobotClick} />\r\n          </Scroll>\r\n          <Slider \r\n            display={sliderDisplay} \r\n            content={sliderContent} \r\n            activeIndex={activeIndex}\r\n            popUpHide={this.onSliderClick} \r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}