{"version":3,"sources":["Components/Card/Card.js","Components/Cardlist/Cardlist.js","Components/Title/Title.js","Components/SearchBox/SearchBox.js","Components/Loading/Loading.js","Components/Scroll/Scroll.js","Components/Header/Header.js","Components/Space/Space.js","Components/Slide/Slide.js","Components/Slider/Slider.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","id","popUpShow","className","onClick","src","alt","Cardlist","cardArray","users","map","robot","email","Title","SearchBox","type","placeholder","onChange","searchChange","Loading","position","Scroll","children","Header","Space","style","width","height","Slide","username","phone","website","companyName","city","activeIndex","Slider","content","el","parseInt","console","log","company","address","display","popUpHide","App","state","searchFieald","sliderDisplay","sliderContent","onSearchChange","bind","onRobotClick","onPopUpClick","fetch","then","response","json","setState","event","this","target","value","currentTarget","filteredUsers","filter","user","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uaAiBeA,EAfF,SAACC,GAAW,IACbC,EAAwBD,EAAxBC,KAAMC,EAAkBF,EAAlBE,GAAIC,EAAcH,EAAdG,UAClB,OACI,sBAAKC,UAAU,OAAOC,QAASF,EAAWD,GAAIA,EAA9C,UACI,qBAAKE,UAAU,wBAAf,SACA,qBAAKE,IAAG,+BAA0BJ,GAAMK,IAAI,aAE5C,qBAAKH,UAAU,aAAf,SACI,6BAAKH,UCcNO,G,MApBE,SAACR,GACd,IAAMS,EAAYT,EAAMU,MAAMC,KAAI,SAAAC,GAC9B,OACI,cAAC,EAAD,CAEIV,GAAIU,EAAMV,GACVD,KAAMW,EAAMX,KACZY,MAAOD,EAAMC,MACbV,UAAWH,EAAMG,WAJZS,EAAMV,OASvB,OACI,qBAAKE,UAAU,WAAf,SACKK,MCTEK,G,MARD,WACV,OACI,qBAAKV,UAAU,QAAf,SACI,iDCUGW,G,MAbG,SAACf,GACf,OACI,qBAAKI,UAAU,mBAAf,SACI,uBACIA,UAAU,gCACVY,KAAK,SACLC,YAAY,mBACZC,SAAUlB,EAAMmB,mBCCjBC,G,MARC,SAACpB,GACb,OACI,qBAAKI,UAAWJ,EAAMqB,SAAtB,SACI,oBAAIjB,UAAU,OAAd,oCCKGkB,G,MARA,SAACtB,GACZ,OACI,qBAAKI,UAAU,SAAf,SACKJ,EAAMuB,aCKJC,G,MARA,SAACxB,GACZ,OACI,qBAAKI,UAAU,SAAf,SACKJ,EAAMuB,aCDJE,EAJD,SAACzB,GACX,OAAO,qBAAK0B,MAAO,CAACC,MAAM,OAAQC,OAAO,GAAD,OAAI5B,EAAM4B,YCsBvCC,G,YArBD,SAAC7B,GAAW,IACdC,EAA8ED,EAA9EC,KAAMY,EAAwEb,EAAxEa,MAAOX,EAAiEF,EAAjEE,GAAI4B,EAA6D9B,EAA7D8B,SAAUC,EAAmD/B,EAAnD+B,MAAOC,EAA4ChC,EAA5CgC,QAASC,EAAmCjC,EAAnCiC,YAAaC,EAAsBlC,EAAtBkC,KAAMC,EAAgBnC,EAAhBmC,YACtE,OACI,sBAAK/B,UAAU,QAAQF,GAAIA,EAA3B,UACI,qBAAKE,UAAU,yBAAf,SACA,qBAAKE,IAAG,+BAA0B6B,GAAe5B,IAAI,aAErD,sBAAKH,UAAU,cAAf,UACI,6BAAKH,IACL,4BAAIY,IACJ,4BAAIiB,IACJ,4BAAIC,IACJ,4BAAIC,IACJ,4BAAIE,IACJ,4BAAID,YCeLG,EA5BA,SAACpC,GACZ,IAAMqC,EAAUrC,EAAMqC,QAAQ1B,KAAI,SAAA2B,GAC9B,GAAIA,EAAGpC,KAAOqC,SAASvC,EAAMmC,aAGzB,OADAK,QAAQC,IAAIH,EAAGpC,GAAIqC,SAASvC,EAAMmC,cAE9B,cAAC,EAAD,CAEAjC,GAAIoC,EAAGpC,GACPD,KAAMqC,EAAGrC,KACTY,MAAO,UAAYyB,EAAGzB,MACtBiB,SAAU,aAAeQ,EAAGR,SAC5BG,YAAa,iBAAmBK,EAAGI,QAAQzC,KAC3CiC,KAAM,SAAUI,EAAGK,QAAQT,KAC3BC,YAAanC,EAAMmC,aAPdG,EAAGpC,OAapB,OACI,qBAAKE,UAAU,SAASsB,MAAO,CAACkB,QAAQ,GAAD,OAAK5C,EAAM4C,UAAYvC,QAASL,EAAM6C,UAA7E,SACKR,KCsFES,E,kDAjGb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXrC,MAAO,GACPsC,aAAc,GACdC,cAAe,OACfC,cAAe,GACff,YAAa,GAGf,EAAKgB,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBAZR,E,qDAed,WAAqB,IAAD,OAClBG,MAAM,8CACLC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAA9C,GACJ,EAAKiD,SAAS,CAACjD,MAAOA,S,4BAI1B,SAAekD,GACbC,KAAKF,SAAS,CAACX,aAAcY,EAAME,OAAOC,U,0BAK5C,SAAaH,GACXC,KAAKF,SAAS,CAACV,cAAe,UAE9BY,KAAKF,SAAS,CAACxB,YAAayB,EAAMI,cAAc9D,KAIhD2D,KAAKF,SAAS,CAACT,cAAeW,KAAKd,MAAMrC,QAGzC8B,QAAQC,IAAIoB,KAAKd,MAAMrC,MAAMkD,EAAMI,cAAc9D,GAAG,M,0BAMtD,SAAa0D,GACPA,EAAME,SAAWF,EAAMI,eACzBH,KAAKF,SAAS,CAACV,cAAe,W,oBAIlC,WAAU,IAAD,EACoEY,KAAKd,MAAxErC,EADD,EACCA,MAAOsC,EADR,EACQA,aAAcC,EADtB,EACsBA,cAAeC,EADrC,EACqCA,cAAef,EADpD,EACoDA,YAErD8B,EAAgBvD,EAAMwD,QAAO,SAAAC,GACjC,OAAOA,EAAKlE,KAAKmE,cAAcC,SAASrB,EAAaoB,kBAGvD,OAAqB,IAAjB1D,EAAM4D,OAEN,sBAAKlE,UAAU,OAAf,UACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWe,aAAc0C,KAAKV,oBAEhC,cAAC,EAAD,CAAOvB,OAAO,UACd,cAAC,EAAD,UACE,cAAC,EAAD,CAASP,SAAS,gBAOtB,sBAAKjB,UAAU,OAAf,UACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWe,aAAc0C,KAAKV,oBAEhC,cAAC,EAAD,CAAOvB,OAAO,UACd,cAAC,EAAD,UACE,cAAC,EAAD,CAAUlB,MAAOuD,EAAe9D,UAAW0D,KAAKR,iBAElD,cAAC,EAAD,CACET,QAASK,EACTZ,QAASa,EACTf,YAAaA,EACbU,UAAWgB,KAAKP,sB,GA1FViB,aCDHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.60038ddc.chunk.js","sourcesContent":["import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n    const { name, id, popUpShow } = props;\r\n    return(\r\n        <div className=\"card\" onClick={popUpShow} id={id}>\r\n            <div className=\"card__image-container\">\r\n            <img src={`https://robohash.org/${id}`} alt=\"robots\" />\r\n            </div>\r\n            <div className=\"card__text\">\r\n                <h2>{name}</h2>\r\n                {/* <p>{email}</p> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import Card from \"../Card/Card\";\r\nimport \"./Cardlist.css\";\r\n\r\n\r\nconst Cardlist = (props) => {\r\n    const cardArray = props.users.map(robot => {\r\n        return(\r\n            <Card \r\n                key={robot.id} \r\n                id={robot.id} \r\n                name={robot.name} \r\n                email={robot.email}\r\n                popUpShow={props.popUpShow}\r\n            />\r\n        ); \r\n    })\r\n\r\n    return(\r\n        <div className=\"cardlist\">\r\n            {cardArray}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cardlist;","import \"./Title.css\";\r\n\r\nconst Title = () => {\r\n    return(\r\n        <div className=\"title\">\r\n            <h1>Robofriends</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Title;","import \"./SearchBox.css\";\r\n\r\nconst SearchBox = (props) => {\r\n    return(\r\n        <div className=\"search-container\">\r\n            <input \r\n                className=\"search-container__placeholder\"   \r\n                type=\"search\" \r\n                placeholder=\"Search robots...\" \r\n                onChange={props.searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import \"./Loading.css\";\r\n\r\nconst Loading = (props) => {\r\n    return(\r\n        <div className={props.position}>\r\n            <h2 className=\"text\">Robots are loading</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loading;","import \"./Scroll.css\";\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div className=\"scroll\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import \"./Header.css\";\r\n\r\nconst Header = (props) => {\r\n    return(\r\n        <div className=\"header\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","const Space = (props) => {\r\n    return <div style={{width:\"100%\", height:`${props.height}`}}></div>\r\n}\r\n\r\nexport default Space;","import \"./Slide.css\";\r\n\r\nconst Slide = (props) => {\r\n    const { name, email, id, username, phone, website, companyName, city, activeIndex } = props;\r\n    return(\r\n        <div className=\"slide\" id={id}>\r\n            <div className=\"slide__image-container\">\r\n            <img src={`https://robohash.org/${activeIndex}`} alt=\"robots\" />\r\n            </div>\r\n            <div className=\"slide__text\">\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n                <p>{username}</p>\r\n                <p>{phone}</p>\r\n                <p>{website}</p>\r\n                <p>{city}</p>\r\n                <p>{companyName}</p>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Slide;","import \"./Slider.css\";\r\nimport Slide from \"../Slide/Slide\";\r\n\r\nconst Slider = (props) => {\r\n    const content = props.content.map(el => {\r\n        if (el.id === parseInt(props.activeIndex)) {\r\n            \r\n            console.log(el.id, parseInt(props.activeIndex))\r\n            return(\r\n                <Slide \r\n                key={el.id} \r\n                id={el.id} \r\n                name={el.name} \r\n                email={\"Email: \" + el.email}\r\n                username={\"Username: \" + el.username}\r\n                companyName={\"Company name: \" + el.company.name}\r\n                city={\"City: \"+ el.address.city}\r\n                activeIndex={props.activeIndex}\r\n                />\r\n            );\r\n        }\r\n    })\r\n\r\n    return(\r\n        <div className=\"slider\" style={{display: `${props.display}`}} onClick={props.popUpHide} >\r\n            {content}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Slider;\r\n\r\n\r\n\r\n","import React, { Component } from \"react\"\r\nimport './App.css';\r\nimport Cardlist from \"../Cardlist/Cardlist\";\r\nimport Title from \"../Title/Title\";\r\nimport SearchBox from \"../SearchBox/SearchBox\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport Scroll from \"../Scroll/Scroll\";\r\nimport Header from \"../Header/Header\";\r\nimport Space from \"../Space/Space\";\r\nimport Slider from \"../Slider/Slider\";\r\n\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      users: [],\r\n      searchFieald: \"\",\r\n      sliderDisplay: \"none\",\r\n      sliderContent: [],\r\n      activeIndex: 0\r\n    };\r\n\r\n    this.onSearchChange = this.onSearchChange.bind(this);\r\n    this.onRobotClick = this.onRobotClick.bind(this);\r\n    this.onPopUpClick = this.onPopUpClick.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n    .then(response => {\r\n      return response.json();\r\n    })\r\n    .then(users => {\r\n      this.setState({users: users})\r\n    })\r\n  }\r\n\r\n  onSearchChange(event) {\r\n    this.setState({searchFieald: event.target.value});\r\n  }\r\n\r\n \r\n  \r\n  onRobotClick(event) {\r\n    this.setState({sliderDisplay: \"block\"});\r\n    \r\n    this.setState({activeIndex: event.currentTarget.id});\r\n\r\n    // this.setState({sliderContent: this.state.users[event.currentTarget.id-1]})\r\n\r\n    this.setState({sliderContent: this.state.users})\r\n\r\n\r\n    console.log(this.state.users[event.currentTarget.id-1])\r\n  }\r\n\r\n\r\n  \r\n\r\n  onPopUpClick(event) {\r\n    if (event.target === event.currentTarget) {\r\n      this.setState({sliderDisplay: \"none\"});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { users, searchFieald, sliderDisplay, sliderContent, activeIndex } = this.state;\r\n\r\n    const filteredUsers = users.filter(user => {\r\n      return user.name.toLowerCase().includes(searchFieald.toLowerCase());\r\n    })\r\n\r\n    if (users.length === 0) {\r\n      return(\r\n        <div className=\"home\">\r\n          <Header>\r\n            <Title />\r\n            <SearchBox searchChange={this.onSearchChange}/>\r\n          </Header>\r\n          <Space height=\"210px\" />\r\n          <Scroll>\r\n            <Loading position=\"center\" />\r\n          </Scroll>\r\n        </div>\r\n      ); \r\n    }\r\n    else {\r\n      return(\r\n        <div className=\"home\">\r\n          <Header>\r\n            <Title />\r\n            <SearchBox searchChange={this.onSearchChange}/>\r\n          </Header>\r\n          <Space height=\"210px\" />\r\n          <Scroll>\r\n            <Cardlist users={filteredUsers} popUpShow={this.onRobotClick} />\r\n          </Scroll>\r\n          <Slider \r\n            display={sliderDisplay} \r\n            content={sliderContent} \r\n            activeIndex={activeIndex}\r\n            popUpHide={this.onPopUpClick} \r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}