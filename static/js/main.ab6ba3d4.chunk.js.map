{"version":3,"sources":["Components/Card/Card.js","Components/Cardlist/Cardlist.js","Components/Title/Title.js","Components/SearchBox/SearchBox.js","Components/Loading/Loading.js","Components/Scroll/Scroll.js","Components/Header/Header.js","Components/Space/Space.js","Components/Slide/Slide.js","Components/Previous/Previous.js","Components/Next/Next.js","Components/Slider/Slider.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","id","popUpShow","robot","className","onClick","src","alt","Cardlist","cardArray","users","map","user","index","email","length","Title","SearchBox","type","placeholder","value","searchFieald","onChange","searchChange","Loading","position","Scroll","children","Header","Space","style","width","height","Slide","username","phone","website","companyName","city","image","prevSlide","beforePrevSlide","currentSlide","nextSlide","afterNextSlide","onTouchStart","onTouchMove","onTouchEnd","Previous","clickPrevious","Next","clickNext","Slider","undefined","content","company","address","display","popUpHide","App","state","sliderDisplay","sliderContent","windowWidth","window","innerWidth","thersholdX","thersholdY","allowedTime","startX","startY","startTime","endX","endY","endTime","onSearchChange","bind","onRobotClick","onSliderClick","handleResize","onClickNext","onClickPrevious","e","this","setState","fetch","then","response","json","fetchUsers","addEventListener","event","target","parseInt","currentTarget","touchObj","changedTouches","clientX","clientY","Date","getTime","distanceXToRight","distanceXToLeft","offsetY","Math","abs","elapsedTime","swipeLeft","swipeRight","console","log","filteredUsers","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab6ba3d4.chunk.js","sourcesContent":["import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n    const { name, id, popUpShow, robot } = props;\r\n    return(\r\n        <div className=\"card\" onClick={popUpShow} id={id}>\r\n            <div className=\"card__image-container\">\r\n            <img src={robot} alt=\"robots\" />\r\n            </div>\r\n            <div className=\"card__text\">\r\n                <h2>{name}</h2>\r\n                {/* <p>{email}</p> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import Card from \"../Card/Card\";\r\nimport \"./Cardlist.css\";\r\n\r\n\r\nconst Cardlist = (props) => {\r\n    const cardArray = props.users.map((user, index) => {\r\n        return(\r\n            <Card \r\n                key={user.id} \r\n                id={user.id} \r\n                name={user.name} \r\n                email={user.email}\r\n                popUpShow={props.popUpShow}\r\n                robot={`https://robohash.org/${user.id}`}\r\n            />\r\n        ); \r\n    })\r\n\r\n    return(\r\n        <div \r\n            className={props.users.length <= 2 ? \"cardlist cardlist--center\" : \"cardlist\"}\r\n        >\r\n            {cardArray}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cardlist;","import \"./Title.css\";\r\n\r\nconst Title = () => {\r\n    return(\r\n        <div className=\"title\">\r\n            <h1>Robofriends</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Title;","import \"./SearchBox.css\";\r\n\r\nconst SearchBox = (props) => {\r\n    return(\r\n        <div className=\"search-container\">\r\n            <input \r\n                className=\"search-container__placeholder\"   \r\n                type=\"search\" \r\n                placeholder=\"Search robots...\" \r\n                value={props.searchFieald}\r\n                onChange={props.searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import \"./Loading.css\";\r\n\r\nconst Loading = (props) => {\r\n    return(\r\n        <div className={props.position}>\r\n            <h2 className=\"text\">Robots are loading</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loading;","import \"./Scroll.css\";\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div className=\"scroll\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import \"./Header.css\";\r\n\r\nconst Header = (props) => {\r\n    return(\r\n        <div className=\"header\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","const Space = (props) => {\r\n    return <div style={{width:\"100%\", height:`${props.height}`}}></div>\r\n}\r\n\r\nexport default Space;","import \"./Slide.css\";\r\n\r\nconst Slide = (props) => {\r\n    const { name, \r\n            email, \r\n            id, \r\n            username, \r\n            phone, \r\n            website, \r\n            companyName, \r\n            city, \r\n            image, \r\n            prevSlide, \r\n            beforePrevSlide, \r\n            currentSlide, \r\n            nextSlide, \r\n            afterNextSlide,\r\n            onTouchStart,\r\n            onTouchMove,\r\n            onTouchEnd\r\n        } = props;\r\n    return(\r\n        // <div \r\n        //     className=\"slide\"\r\n        // >\r\n            <div className={\r\n                prevSlide ? \"slide__prev\" : \"slide\" &&\r\n                beforePrevSlide ? \"slide__before-prev\" : \"slide\" &&\r\n                currentSlide ? \"slide__current\" : \"slide\" &&\r\n                nextSlide ? \"slide__next\" : \"slide\" &&\r\n                afterNextSlide ? \"slide__after-next\" : \"slide\"\r\n                }\r\n                id={id}\r\n                onTouchStart={onTouchStart}\r\n                onTouchMove={onTouchMove}\r\n                onTouchEnd={onTouchEnd}\r\n            >\r\n                <div className=\"slide__image-container\">\r\n                <img src={image} alt=\"robots\" />\r\n                </div>\r\n                <div className=\"slide__text\">\r\n                    <h2>{name}</h2>\r\n                    <p>{email}</p>\r\n                    <p>{username}</p>\r\n                    <p>{phone}</p>\r\n                    <p>{website}</p>\r\n                    <p>{city}</p>\r\n                    <p>{companyName}</p>\r\n                </div>\r\n            </div>\r\n        // </div>\r\n    );\r\n}\r\n\r\nexport default Slide;","import \"./Previous.css\";\r\n\r\nconst Previous = (props) => {\r\n    return(\r\n        <div \r\n            className=\"previous\"\r\n            onClick={props.clickPrevious}\r\n        >\r\n            <div className=\"previous__arrow\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Previous;","import \"./Next.css\";\r\n\r\nconst Next = (props) => {\r\n    return(\r\n        <div \r\n            className=\"next\"\r\n            onClick={props.clickNext}\r\n        >\r\n            <div className=\"next__arrow\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Next;","import \"./Slider.css\";\r\nimport Slide from \"../Slide/Slide\";\r\nimport Previous from \"../Previous/Previous\";\r\nimport Next from \"../Next/Next\";\r\n\r\n\r\nconst Slider = (props) => {\r\n    let prevSlide = undefined;\r\n    let beforePrevSlide = undefined;\r\n    let currentSlide = undefined;\r\n    let nextSlide = undefined;\r\n    let afterNextSlide = undefined;\r\n\r\n\r\n    props.content.map(user => {\r\n        if (user.id === props.beforePrevSlide) {\r\n            return(\r\n                beforePrevSlide = \r\n                <Slide \r\n                    key={user.id} \r\n                    id={user.id} \r\n                    name={user.name} \r\n                    email={\"Email: \" + user.email}\r\n                    username={\"Username: \" + user.username}\r\n                    companyName={\"Company name: \" + user.company.name}\r\n                    city={\"City: \"+ user.address.city}\r\n                    image={`https://robohash.org/${user.id}`}\r\n                    beforePrevSlide=\"prevSlide-sec\"\r\n                />\r\n            );\r\n        }\r\n\r\n        if (user.id === props.prevSlide) {\r\n            return(\r\n                prevSlide = \r\n                <Slide \r\n                    key={user.id} \r\n                    id={user.id} \r\n                    name={user.name} \r\n                    email={\"Email: \" + user.email}\r\n                    username={\"Username: \" + user.username}\r\n                    companyName={\"Company name: \" + user.company.name}\r\n                    city={\"City: \"+ user.address.city}\r\n                    image={`https://robohash.org/${user.id}`}\r\n                    prevSlide=\"prevSlide\"\r\n                />\r\n            );\r\n        }\r\n\r\n        if (user.id === props.currentSlide) {\r\n            return(\r\n                currentSlide = \r\n                <Slide \r\n                    key={user.id} \r\n                    id={user.id} \r\n                    name={user.name} \r\n                    email={\"Email: \" + user.email}\r\n                    username={\"Username: \" + user.username}\r\n                    companyName={\"Company name: \" + user.company.name}\r\n                    city={\"City: \"+ user.address.city}\r\n                    image={`https://robohash.org/${user.id}`}\r\n                    currentSlide=\"currentSlide\"\r\n                    onTouchStart={props.onTouchStart}\r\n                    onTouchMove={props.onTouchMove}\r\n                    onTouchEnd={props.onTouchEnd}\r\n                />\r\n            );\r\n        }\r\n\r\n        if (user.id === props.nextSlide) {\r\n            return(\r\n                nextSlide = \r\n                <Slide \r\n                    key={user.id} \r\n                    id={user.id} \r\n                    name={user.name} \r\n                    email={\"Email: \" + user.email}\r\n                    username={\"Username: \" + user.username}\r\n                    companyName={\"Company name: \" + user.company.name}\r\n                    city={\"City: \"+ user.address.city}\r\n                    image={`https://robohash.org/${user.id}`}\r\n                    nextSlide=\"nexts\"\r\n                />\r\n            );\r\n        }\r\n\r\n        if (user.id === props.afterNextSlide) {\r\n            return(\r\n                afterNextSlide = \r\n                <Slide \r\n                    key={user.id} \r\n                    id={user.id} \r\n                    name={user.name} \r\n                    email={\"Email: \" + user.email}\r\n                    username={\"Username: \" + user.username}\r\n                    companyName={\"Company name: \" + user.company.name}\r\n                    city={\"City: \"+ user.address.city}\r\n                    image={`https://robohash.org/${user.id}`}\r\n                    afterNextSlide=\"nextSlide-sec\"\r\n                />\r\n            );\r\n        }\r\n        return(\r\n            beforePrevSlide, \r\n            prevSlide, \r\n            currentSlide, \r\n            nextSlide, \r\n            afterNextSlide\r\n        ) \r\n    })\r\n    return(\r\n        <div \r\n            className=\"slider\" \r\n            style={{display: `${props.display}`}} \r\n            onClick={props.popUpHide} \r\n            // onTouchStart={props.onTouchStart}\r\n            // onTouchMove={props.onTouchMove}\r\n            // onTouchEnd={props.onTouchEnd}\r\n        >\r\n            <Previous clickPrevious={props.clickPrevious} />\r\n            <Next clickNext={props.clickNext} />\r\n            <div className=\"slider__slides-wrapper\">\r\n                {beforePrevSlide}\r\n                {prevSlide}\r\n                {currentSlide}\r\n                {nextSlide}\r\n                {afterNextSlide}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Slider;\r\n\r\n\r\n\r\n","import React, { Component } from \"react\"\r\nimport './App.css';\r\nimport Cardlist from \"../Cardlist/Cardlist\";\r\nimport Title from \"../Title/Title\";\r\nimport SearchBox from \"../SearchBox/SearchBox\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport Scroll from \"../Scroll/Scroll\";\r\nimport Header from \"../Header/Header\";\r\nimport Space from \"../Space/Space\";\r\nimport Slider from \"../Slider/Slider\";\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      users: [],\r\n      searchFieald: \"\",\r\n      sliderDisplay: \"none\",\r\n      sliderContent: [],\r\n      currentSlide: undefined,\r\n      beforePrevSlide: undefined,\r\n      prevSlide: undefined,\r\n      nextSlide: undefined,\r\n      afterNextSlide: undefined,\r\n      windowWidth: window.innerWidth,\r\n      // touchObj: undefined,\r\n      thersholdX: 30,\r\n      thersholdY: 100,\r\n      allowedTime: 300,\r\n      startX: undefined,\r\n      startY: undefined,\r\n      startTime: undefined,\r\n      endX: undefined,\r\n      endY: undefined,\r\n      endTime: undefined\r\n    };\r\n\r\n    this.onSearchChange = this.onSearchChange.bind(this);\r\n    this.onRobotClick = this.onRobotClick.bind(this);\r\n    this.onSliderClick = this.onSliderClick.bind(this);\r\n    this.handleResize = this.handleResize.bind(this);\r\n    this.onClickNext = this.onClickNext.bind(this);\r\n    this.onClickPrevious = this.onClickPrevious.bind(this);\r\n    this.onTouchStart = this.onTouchStart.bind(this);\r\n    this.onTouchMove = this.onTouchMove.bind(this);\r\n    this.onTouchEnd = this.onTouchEnd.bind(this);\r\n\r\n  }\r\n\r\n  // When resizing the window\r\n  handleResize(e) {\r\n    this.setState({ windowWidth: window.innerWidth });\r\n    // console.log(this.state.windowWidth)\r\n  };\r\n\r\n  // Fetch users\r\n  fetchUsers() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n    .then(response => {\r\n      return response.json();\r\n    })\r\n    .then(users => {\r\n      this.setState({users: users})\r\n    })\r\n  }\r\n  \r\n  // When mounted\r\n  componentDidMount() {\r\n    // Fetch the users\r\n    this.fetchUsers();\r\n\r\n    // Listen to screen size changes\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n  }\r\n\r\n  // When unmounted\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n  }\r\n\r\n  // When searching\r\n  onSearchChange(event) {\r\n    this.setState({searchFieald: event.target.value});\r\n  }\r\n\r\n  // When clicked on any of the robot cards\r\n  onRobotClick(event) {\r\n    // Show the Slider\r\n    this.setState({sliderDisplay: \"block\"});\r\n\r\n    // Setting the state of the slider content with the fetched users\r\n    this.setState({sliderContent: this.state.users});\r\n    \r\n    // Clearing the searchfield value\r\n    this.setState({searchFieald: \"\"});\r\n    \r\n    // Set the state of all the slides starting with setting the current one\r\n    this.setState({currentSlide: parseInt(event.currentTarget.id)}, \r\n      () => {\r\n        // console.log(this.state.currentSlide)\r\n        // If clicked one the first card\r\n        if (this.state.currentSlide === 1) {\r\n          // Before prevoious slide state\r\n          this.setState({beforePrevSlide: this.state.users.length -1});\r\n          \r\n          // Prevoious slide state\r\n          this.setState({prevSlide: this.state.users.length});\r\n\r\n          // Next slide state\r\n          this.setState({nextSlide: this.state.currentSlide + 1});\r\n\r\n          // After Next slide state\r\n          this.setState({afterNextSlide: this.state.currentSlide + 2});\r\n\r\n          // console.log(\"it's 1\")\r\n        }\r\n\r\n        // If clicked one the second card\r\n        else if (this.state.currentSlide === 2) {\r\n          // Before prevoious slide state\r\n          this.setState({beforePrevSlide: this.state.users.length});\r\n          \r\n          // Prevoious slide state\r\n          this.setState({prevSlide: this.state.currentSlide - 1});\r\n\r\n          // Next slide state\r\n          this.setState({nextSlide: this.state.currentSlide + 1});\r\n\r\n          // After Next slide state\r\n          this.setState({afterNextSlide: this.state.currentSlide + 2});\r\n\r\n          // console.log(\"it's 2\")\r\n        }\r\n\r\n        // If clicked one the slide before the last\r\n        else if (this.state.currentSlide === this.state.users.length - 1) {\r\n          // Before prevoious slide state\r\n          this.setState({beforePrevSlide: this.state.currentSlide - 2});\r\n\r\n          // Prevoious slide state\r\n          this.setState({prevSlide: this.state.currentSlide - 1});\r\n          \r\n          // Next slide state\r\n          this.setState({nextSlide: this.state.users.length});\r\n          \r\n          // After Next slide state\r\n          this.setState({afterNextSlide: 1});\r\n\r\n          // console.log(\"it's one before the last\")\r\n        }\r\n\r\n        // If clicked one the the last slide\r\n        else if (this.state.currentSlide === this.state.users.length) {\r\n          // Before prevoious slide state\r\n          this.setState({beforePrevSlide: this.state.currentSlide - 2});\r\n          \r\n          // Prevoious slide state\r\n          this.setState({prevSlide: this.state.currentSlide - 1});\r\n\r\n          // Next slide state\r\n          this.setState({nextSlide: 1});\r\n\r\n          // After Next slide state\r\n          this.setState({afterNextSlide: 2});\r\n\r\n          // console.log(\"it's last\")\r\n        }\r\n\r\n        // If clicked one any other slide\r\n        else {\r\n          // Before prevoious slide state\r\n          this.setState({beforePrevSlide: this.state.currentSlide - 2});\r\n\r\n          // Prevoious slide state\r\n          this.setState({prevSlide: this.state.currentSlide - 1});\r\n\r\n          // Next slide state\r\n          this.setState({nextSlide: this.state.currentSlide + 1});\r\n\r\n          // After Next slide state\r\n          this.setState({afterNextSlide: this.state.currentSlide + 2});\r\n\r\n          // console.log(\"it's other\")\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  onSliderClick(event) {\r\n    if (event.target === event.currentTarget || event.target.className === \"slider__slides-wrapper\") {\r\n      this.setState({sliderDisplay: \"none\"});\r\n\r\n      this.setState({sliderContent: []});\r\n    }\r\n  }\r\n\r\n  // When clicked prev button in the slider\r\n  onClickPrevious() {\r\n    // Update the state of the slide before the previous\r\n    if (this.state.beforePrevSlide === 1) {\r\n      this.setState({beforePrevSlide: this.state.users.length}) \r\n    }\r\n    else {\r\n      this.setState({beforePrevSlide: this.state.beforePrevSlide - 1})\r\n    }\r\n\r\n    // Update the state of the previous slide\r\n    if (this.state.prevSlide === 1) {\r\n      this.setState({prevSlide: this.state.users.length}) \r\n    }\r\n    else {\r\n      this.setState({prevSlide: this.state.prevSlide - 1})\r\n    }\r\n\r\n    // Update the state of the next slide\r\n    if (this.state.nextSlide === 1) {\r\n      this.setState({nextSlide: this.state.users.length}) \r\n    }\r\n    else {\r\n      this.setState({nextSlide: this.state.nextSlide - 1})\r\n    }\r\n\r\n    // Update the state of the slide after the next\r\n    if (this.state.afterNextSlide === 1) {\r\n      this.setState({afterNextSlide: this.state.users.length}) \r\n    }\r\n    else {\r\n      this.setState({afterNextSlide: this.state.afterNextSlide - 1})\r\n    }\r\n\r\n    // Update the state of the current slide\r\n    if (this.state.currentSlide === 1) {\r\n      this.setState({currentSlide: this.state.users.length}) \r\n    }\r\n    else {\r\n      this.setState({currentSlide: this.state.currentSlide - 1})\r\n    }\r\n  }\r\n\r\n  // When clicked next button in the slider\r\n  onClickNext() {\r\n    // Update the state of the slide before the previous\r\n    if (this.state.beforePrevSlide === this.state.users.length) {\r\n      this.setState({beforePrevSlide: 1});\r\n    }\r\n    else {\r\n      this.setState({beforePrevSlide: this.state.beforePrevSlide + 1});\r\n    }\r\n\r\n    // Update the state of the previous slide\r\n    if (this.state.prevSlide === this.state.users.length) {\r\n      this.setState({prevSlide: 1});\r\n    }\r\n    else {\r\n      this.setState({prevSlide: this.state.prevSlide + 1});\r\n    }\r\n\r\n    // Update the state of the next slide\r\n    if (this.state.nextSlide === this.state.users.length) {\r\n      this.setState({nextSlide: 1});\r\n    }\r\n    else {\r\n      this.setState({nextSlide: this.state.nextSlide + 1});\r\n    }\r\n\r\n    // Update the state of the slide after the next\r\n    if (this.state.afterNextSlide === this.state.users.length) {\r\n      this.setState({afterNextSlide: 1});\r\n    }\r\n    else {\r\n      this.setState({afterNextSlide: this.state.afterNextSlide + 1});\r\n    }\r\n\r\n    // Update the state of the current slide\r\n    if (this.state.currentSlide === this.state.users.length) {\r\n      this.setState({currentSlide: 1})\r\n    }\r\n    else {\r\n      this.setState({currentSlide: this.state.currentSlide + 1})\r\n    }\r\n  }\r\n\r\n  onTouchStart(event) {\r\n\r\n    let touchObj = event.changedTouches[0];\r\n\r\n    this.setState({startX: touchObj.clientX});\r\n    this.setState({startY: touchObj.clientY});\r\n\r\n    this.setState({startTime: new Date().getTime()});\r\n\r\n  }\r\n\r\n  onTouchMove(event) {\r\n    let touchObj = event.changedTouches[0];\r\n\r\n    this.setState({endX: touchObj.clientX});\r\n    this.setState({endY: touchObj.clientY});\r\n\r\n    \r\n    this.setState({endTime: new Date().getTime()});\r\n  }\r\n\r\n  onTouchEnd(event) {\r\n\r\n\r\n\r\n    let distanceXToRight = this.state.endX - this.state.startX;\r\n    let distanceXToLeft = this.state.startX - this.state.endX;\r\n    let offsetY = Math.abs(this.state.endY - this.state.startY);\r\n    let elapsedTime = this.state.endTime - this.state.startTime;\r\n\r\n\r\n    let swipeLeft = (elapsedTime <= this.state.allowedTime && distanceXToLeft >= this.state.thersholdX && offsetY <= this.state.thersholdY);\r\n\r\n    let swipeRight = (elapsedTime <= this.state.allowedTime && distanceXToRight >= this.state.thersholdX && offsetY <= this.state.thersholdY);\r\n\r\n    if (swipeLeft) {\r\n      console.log(\"swipe left\")\r\n      this.onClickNext();\r\n    }\r\n\r\n    if (swipeRight) {\r\n      console.log(\"swipe Right\")\r\n      this.onClickPrevious();\r\n    }\r\n\r\n        \r\n    //     if (direction === \"left\" && swipeLeft) {\r\n    //         callback();\r\n    //     }\r\n    \r\n    //     if (direction === \"right\" && swipeRight && onTouchEnd) {\r\n    //       callback();\r\n        \r\n    //     }\r\n  }\r\n\r\n\r\n  render() {\r\n    const { users, searchFieald, sliderDisplay, sliderContent, currentSlide, beforePrevSlide, prevSlide, nextSlide, afterNextSlide } = this.state;\r\n    console.log(\"render\")\r\n\r\n    // console.log(\"touch\", this.state.startX, this.state.startY, this.state.startTime)\r\n\r\n    // console.log(\"move\", this.state.endX, this.state.endY, this.state.endTime)\r\n\r\n    // console.log(this.state.beforePrevSlide, this.state.prevSlide, this.state.nextSlide, this.state.afterNextSlide)\r\n\r\n\r\n    const filteredUsers = users.filter(user => {\r\n      return user.name.toLowerCase().includes(searchFieald.toLowerCase());\r\n    })\r\n\r\n    if (users.length === 0) {\r\n      return(\r\n        <div className=\"home\">\r\n          <Header>\r\n            <Title />\r\n            <SearchBox searchChange={this.onSearchChange} searchFieald={searchFieald} />\r\n          </Header>\r\n          <Space height=\"210px\" />\r\n          <Scroll>\r\n            <Loading position=\"center\" />\r\n          </Scroll>\r\n        </div>\r\n      ); \r\n    }\r\n    else {\r\n      return(\r\n        <div className=\"home\">\r\n          <Header>\r\n            <Title />\r\n            <SearchBox searchChange={this.onSearchChange} searchFieald={searchFieald} />\r\n          </Header>\r\n          <Space height=\"210px\" />\r\n          <Scroll>\r\n            <Cardlist users={filteredUsers} popUpShow={this.onRobotClick} />\r\n          </Scroll>\r\n          <Slider \r\n            display={sliderDisplay} \r\n            content={sliderContent} \r\n            currentSlide={currentSlide}\r\n            popUpHide={this.onSliderClick} \r\n            clickNext={this.onClickNext}\r\n            clickPrevious={this.onClickPrevious}\r\n            beforePrevSlide={beforePrevSlide}\r\n            prevSlide={prevSlide}\r\n            nextSlide={nextSlide}\r\n            afterNextSlide={afterNextSlide}\r\n            onTouchStart={this.onTouchStart}\r\n            onTouchMove={this.onTouchMove}\r\n            onTouchEnd={this.onTouchEnd}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// function swipe(direction, scrollElement, callback) {\r\n\r\n//   let startX = 0;\r\n//   let startY = 0;\r\n//   let endX = 0;\r\n//   let endY = 0;\r\n//   let startTime;\r\n\r\n\r\n//   let thersholdX = 50;\r\n//   let thersholdY = 100;\r\n//   let elapsedTime = 0;\r\n//   let allowedTime = 300; \r\n\r\n//   let lateX = 0;\r\n//   let swipe = 0;\r\n\r\n\r\n//   let onTouchEnd;\r\n\r\n\r\n\r\n//   listenerAdd(scrollElement, \"touchstart\", function(event) {\r\n//     let touchObj = event.changedTouches[0];\r\n//     startX = touchObj.screenX;\r\n//     startY = touchObj.screenY;\r\n//     startTime = new Date().getTime();\r\n\r\n\r\n\r\n//     // This is experimental \r\n//     lateX = touchObj.clientX;\r\n\r\n//     onTouchEnd = true;\r\n//   })\r\n\r\n\r\n\r\n\r\n\r\n//   listenerAdd(scrollElement, \"touchmove\", function(event) {\r\n//     let touchObj = event.changedTouches[0];\r\n//     endX = touchObj.screenX;\r\n//     endY = touchObj.screenY;\r\n//     let distanceXToRight = endX - startX;\r\n//     let distanceXToLeft = startX - endX;\r\n//     let offsetY = Math.abs(endY - startY);\r\n//     let endTime = new Date().getTime();\r\n//     elapsedTime = endTime - startTime;\r\n\r\n    \r\n//     let swipeLeft = (elapsedTime <= allowedTime && distanceXToLeft >= thersholdX && offsetY <= thersholdY);\r\n//     let swipeRight = (elapsedTime <= allowedTime && distanceXToRight >= thersholdX && offsetY <= thersholdY);\r\n    \r\n//     if (direction === \"left\" && swipeLeft) {\r\n//         callback();\r\n//     }\r\n\r\n//     if (direction === \"right\" && swipeRight && onTouchEnd) {\r\n//       callback();\r\n    \r\n//     }\r\n//   })\r\n// }","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}